Документация для программы учета заявок на ремонт климатического оборудования
Содержание
Введение
Описание программы
Установка и запуск
Конфигурация
Пользовательский интерфейс
Основные функции
Примеры использования
Обслуживание и поддержка
Резервное копирование и восстановление данных
Обновление программы
Заключение
Введение
Цель документации
Настоящая документация предназначена для пользователей и системных программистов, занимающихся установкой, конфигурацией, использованием, обслуживанием и поддержкой программы для учета заявок на ремонт климатического оборудования.

Описание программы
Программа предназначена для автоматизации процесса учета заявок на ремонт климатического оборудования, включая регистрацию, обработку, исполнение и мониторинг заявок.

Описание программы
Основные функции
Добавление новой заявки
Редактирование существующих заявок
Удаление заявок
Отслеживание статуса заявок
Расчет статистики (количество заявок, среднее время выполнения, типы неисправностей)
Архитектура
Программа разработана с использованием языка Python и библиотеки Pandas для работы с данными. В качестве интерфейса используется библиотека Tkinter.

Установка и запуск
Требования
Операционная система: Windows
Язык программирования: Python 3.x
Библиотеки: Pandas, Tkinter
Шаги установки
Установите Python с официального сайта python.org
Установите необходимые библиотеки с помощью pip:
bash
Копировать код
pip install pandas
pip install tkinter
Скачайте исходный код программы и распакуйте его в удобное для вас место.
Перейдите в директорию с программой и запустите основной файл:
bash
Копировать код
python main.py
Конфигурация
Настройка параметров
Конфигурационные параметры, такие как путь к файлу с данными, можно изменить в конфигурационном файле config.py. Пример содержания файла:

python
Копировать код
# config.py
DATA_FILE_PATH = 'data/requests.csv'
Пользовательский интерфейс
Описание интерфейса
Главное окно программы содержит следующие элементы:

Поля для ввода данных заявки: Для ввода информации о заявке (номер заявки, дата, тип оборудования, модель устройства, описание проблемы, ФИО заказчика, номер телефона, статус заявки).
Кнопки для выполнения операций: Добавление, редактирование, удаление заявок.
Таблица для отображения списка заявок: Фильтры для поиска и сортировки заявок по различным параметрам.
Элементы интерфейса
Поле "Номер заявки": Ввод уникального идентификатора заявки.
Поле "Дата добавления": Ввод даты добавления заявки.
Поле "Тип оборудования": Ввод типа климатического оборудования.
Поле "Модель устройства": Ввод модели устройства.
Поле "Описание проблемы": Ввод описания проблемы.
Поле "ФИО заказчика": Ввод имени заказчика.
Поле "Номер телефона": Ввод номера телефона заказчика.
Поле "Статус заявки": Ввод статуса заявки (открыта, в процессе ремонта, завершена).
Основные функции
Добавление новой заявки
Введите данные заявки в соответствующие поля.
Нажмите кнопку "Добавить".
Новая заявка будет добавлена в список заявок и сохранена в базе данных.
Редактирование существующей заявки
Выберите заявку из списка.
Внесите изменения в поля данных заявки.
Нажмите кнопку "Сохранить изменения".
Изменения будут сохранены в базе данных.
Удаление заявки
Выберите заявку из списка.
Нажмите кнопку "Удалить".
Подтвердите удаление.
Заявка будет удалена из базы данных.
Отслеживание статуса заявок
Используйте фильтры для поиска и сортировки заявок.
Отображение статусов заявок позволяет контролировать процесс выполнения.
Расчет статистики
Количество выполненных заявок.
Среднее время выполнения заявки.
Статистика по типам неисправностей.
Примеры использования
Добавление новой заявки
python
Копировать код
import pandas as pd

# Загрузка данных из CSV-файла
dataframe = pd.read_csv('data/requests.csv')

# Добавление новой заявки
new_request = {
    'Номер заявки': '123',
    'Дата добавления': '2024-06-14',
    'Тип оборудования': 'Кондиционер',
    'Модель устройства': 'AC-1000',
    'Описание проблемы': 'Не включается',
    'ФИО заказчика': 'Иван Иванов',
    'Номер телефона': '+79001234567',
    'Статус заявки': 'Открыта'
}
dataframe = dataframe.append(new_request, ignore_index=True)

# Сохранение изменений
dataframe.to_csv('data/requests.csv', index=False)
Обслуживание и поддержка
Регулярное обслуживание
Регулярно обновляйте данные заявок.
Выполняйте резервное копирование данных.
Техническая поддержка
Для получения технической поддержки обращайтесь в сервисный центр "IT-Сфера".

Резервное копирование и восстановление данных
Резервное копирование
Для резервного копирования данных выполните следующие шаги:

Скопируйте файл данных requests.csv в безопасное место.
Восстановление данных
Для восстановления данных:

Скопируйте резервную копию файла данных обратно в директорию с программой.
Убедитесь, что путь к файлу данных указан правильно в конфигурационном файле config.py.
Обновление программы
Шаги обновления
Получите новую версию программы.
Замените старые файлы новыми.
Обновите библиотеки, если это необходимо:
bash
Копировать код
pip install -r requirements.txt
Перезапустите программу.
Заключение
Настоящая документация содержит всю необходимую информацию для установки, настройки, использования, обслуживания и поддержки программы учета заявок на ремонт климатического оборудования. Если у вас возникнут вопросы или проблемы, обращайтесь в сервисный центр "IT-Сфера".





